name: terraform-build

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      terraform_directory:
        required: true
        type: string
      artifact-name:
        required: true
        type: string
      jira-key:
        required: false
        type: string
    
    secrets:
      AZURE_CLIENT_ID :
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      token:
        required: true

            
jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    #environment: ${{ inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # - name: make comment
      #   uses: dkershner6/post-api-call-action@v1
      #   with:
      #     url: https://automation.atlassian.com/pro/hooks/7e0c8982c6766ee66128b036964ae062592d1a69
      #     data: '{"issues":["${{ inputs.jira-key }}"], "data": {"releaseVersion":"starting"}}'
      #     #headers: "{\"Authorization\": \"Bearer ${{ secrets.API_KEY }}\"}"
      #     params: "{\"content\": \"Test Content\"}"

      - name: Terraform Directory Path
        id: concatenate
        run: echo "terraformdirectory=${{ github.workspace }}/${{ inputs.terraform_directory }}" >> $GITHUB_OUTPUT   
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ steps.concatenate.outputs.terraformdirectory }}
          
      #TERRAFORM COMMANDS
      - name: Terraform Initialization
        id: terraform-init
        uses: vinayprakash893/azure-terraform-actions-reusable/actions@main
        with:
          working-directory: ${{ steps.concatenate.outputs.terraformdirectory }}
          cli_token: ${{ secrets.TF_API_TOKEN }}
        env:
          ARM_CLIENT_ID:       ${{ secrets.AZURE_CLIENT_ID  }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID:       ${{ secrets.AZURE_TENANT_ID }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Validate Terraform code
        id: validate
        shell: bash
        run: terraform validate 
        working-directory: ${{ steps.concatenate.outputs.terraformdirectory }}
      
      - uses: actions/github-script@v6
        #if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.REPO_SCOPED_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })
      
      - name : Print Title of PR
        env:
            TITLE: ${{ github.event.pull_request.title }}
        run: echo The Title of your PR is $TITLE

      # - name: write file
      #   uses: actions/github-script@v6
      #   if: github.event_name == 'pull_request'
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       echo "hellobuildfile" >> file.txt
      # - name: diaplay all
      #   run: | 
      #     echo "'${{ steps.validate.outcome }}'"
      #     echo "${{ steps.terraform-init.outputs.init-status }}"
      #     echo "${{ steps.validate.outputs.stdout }}"
      # - name: make comment
      #   uses: dkershner6/post-api-call-action@v1
      #   with:
      #     url: https://automation.atlassian.com/pro/hooks/7e0c8982c6766ee66128b036964ae062592d1a69
      #     data: '{"issues":["${{ inputs.jira-key }}"], "data": {"releaseVersion":"${{ steps.terraform-init.outcome }}"}}'
      #     #headers: "{\"Authorization\": \"Bearer ${{ secrets.API_KEY }}\"}"
      #     params: "{\"content\": \"Test Content\"}"

      # - name: Test
      #   run: |
      #     curl -X POST https://api.github.com/repos/vinayprakash893/azure-tf-self-service/dispatches \
      #     -H 'Accept: application/vnd.github.everest-preview+json' \
      #     -u ${{ secrets.ACTIONS_KEY }} \
      #     --data '{ "event_type": "detail-log", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'","filename": "'${{ steps.validate.outcome }}'"}}'
